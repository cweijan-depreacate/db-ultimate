plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id "org.jetbrains.kotlin.jvm" version "1.3.10"
}

group = 'io.github.cweijan'
version '1.4.6'
def springBootVersion="2.1.5.RELEASE"

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    mavenCentral()
}

task sourcesJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

compileJava.dependsOn(processResources)

dependencies {

    //spring
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion
    //datasource
    compile group: 'org.springframework', name: 'spring-tx', version: '5.2.0.RELEASE'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.0'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.38'
    //json
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    //kotlin
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.10'
    //poi
    implementation  group: 'org.apache.poi', name: 'poi', version: '3.17'
    //lucene
    implementation group: 'org.apache.lucene', name: 'lucene-core', version: '8.1.1'
    implementation group: 'org.apache.lucene', name: 'lucene-queryparser', version: '8.1.1'

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion)
    testCompile group: 'junit', name: 'junit', version: '4.12'

}


publishing {
    publications {

        mavenJava(MavenPublication) {
            groupId 'io.github.cweijan'
            artifactId 'db-ultimate'
            version '1.4.5'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'db-ultimate'
                description = 'A java orm framework'
                url = 'https://github.com/mautini/schemaorg-java'
                organization {
                    name = 'github.cweijan'
                    url = 'https://github.com/cweijan'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/cweijan/db-ultimate/issues'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://github.com/cweijan/db-ultimate/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'cweijan'
                        name = 'cweijan'
                        email = 'cweijan@163.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/cweijan/db-ultimate.git'
                    developerConnection = 'scm:git:ssh://git@github.com:cweijan/db-ultimate.git'
                    url = 'https://github.com/cweijan/db-ultimate.git'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username findProperty("sonatype.username")
                password findProperty("sonatype.password")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}